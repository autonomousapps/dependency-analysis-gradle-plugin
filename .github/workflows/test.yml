name: Test

on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '*.asciidoc'
  pull_request:
    paths-ignore:
      - '*.md'
      - '*.asciidoc'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual run'
        required: false

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gradle:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      # https://github.com/actions/runner-images/issues/2840
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # defaults are true
          android: false
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary-as-pr-comment: 'on-failure'

      - name: Execute buildHealth for build-logic
        run: './gradlew -p build-logic/ buildHealth'

      - name: Execute check (build-logic)
        run: './gradlew -p build-logic/ check'

      - name: Execute buildHealth for main project
        run: './gradlew buildHealth'

      - name: Execute buildHealth for testkit project
        run: './gradlew -p testkit/ buildHealth'

      - name: Execute check (non-functional tests)
        run: './gradlew check -s -x :functionalTest'

      - name: Execute check (testkit)
        run: './gradlew -p testkit/ check'

      - name: Execute JVM functional tests
        run: './gradlew :functionalTest -DfuncTest.package=jvm -DfuncTest.quick'

      - name: Execute Android functional tests
        run: './gradlew :functionalTest -DfuncTest.package=android -DfuncTest.quick'

      - name: Check API
        run: './gradlew :checkApi'

      - name: Publish snapshot
        if: github.repository == 'autonomousapps/dependency-analysis-gradle-plugin' && github.ref == 'refs/heads/main'
        run: './gradlew :publishToMavenCentral'
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
